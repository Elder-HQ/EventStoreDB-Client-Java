buildscript {
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.12'
        //classpath 'gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:4.4.4'
        classpath 'de.undercouch:gradle-download-task:4.1.0'
    }
}

plugins {
    id 'java-library'
    id 'com.google.protobuf' version '0.8.12'
    id 'idea'
    id 'maven'
    id 'maven-publish'
    id 'signing'
}

group = 'com.eventstore'
version = '0.1'
//archivesBaseName = 'eventstoredb-client-java'

dependencies {
    implementation "javax.annotation:javax.annotation-api:${annotationApiVersion}"
    implementation "javax.validation:validation-api:${validationApiVersion}"

    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation 'dnsjava:dnsjava:3.2.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.1'

    testImplementation "junit:junit:${junitVersion}"
    testImplementation "org.slf4j:slf4j-nop:${slf4jNopVersion}"
    testImplementation "org.testcontainers:testcontainers:${testcontainersVersion}"

    testImplementation platform("com.fasterxml.jackson:jackson-bom:${jacksonVersion}")
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
}

protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = 'com.google.protobuf:protoc:3.13.0'
    }
    plugins {
        // Optional: an artifact spec for a protoc plugin, with "grpc" as
        // the identifier, which can be referred to in the "plugins"
        // container of the "generateProtoTasks" closure.
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        ofSourceSet('main')*.plugins {
            // Apply the "grpc" plugin whose spec is defined above, without
            // options.  Note the braces cannot be omitted, otherwise the
            // plugin will not be added. This is because of the implicit way
            // NamedDomainObjectContainer binds the methods.
            grpc { }
        }
    }
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    useGpgCmd()
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'EventStoreDB Client Java'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'EventStoreDB gRPC Java client'
                url 'https://eventstore.com'

                scm {
                    connection 'https://github.com/EventStore/EventStoreDB-Client-Java.git'
                    developerConnection 'https://github.com/EventStore/EventStoreDB-Client-Java.git'
                    url 'https://github.com/EventStore/EventStoreDB-Client-Java'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'ylaupa'
                        name 'Yorick Laupa'
                        email 'yorick.laupa@eventstore.com'
                    }
                }
            }
        }
    }
}


//publishing {
//    publications {
//        Snapshot(MavenPublication) {
//            from(components.java)
//        }
//    }
//
//    repositories {
//        maven {
//            url = 'https://oss.sonatype.org/content/repositories/snapshots'
//        }
//    }
//
////    repositories {
////        maven {
////            name = "GitHubPackages"
////            url = uri("https://maven.pkg.github.com/EventStore/EventStoreDB-Client-Java")
////            credentials {
////                username = System.getenv("GITHUB_ACTOR")
////                password = System.getenv("GITHUB_TOKEN")
////            }
////        }
////    }
//}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
