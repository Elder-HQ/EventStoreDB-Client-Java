import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id "java"
    id "com.google.protobuf" version "0.8.12"
    id "maven-publish"

    id "idea"
    id "de.undercouch.download" version "4.0.4"
}

group 'com.eventstore'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs "build/generated/source/proto/main/grpc"
            srcDirs "build/generated/source/proto/main/java"
        }
    }
}

task updateServerProtos(type: Download) {
    src([
            "https://raw.githubusercontent.com/EventStore/EventStore/master/src/Protos/Grpc/shared.proto",
            "https://raw.githubusercontent.com/EventStore/EventStore/master/src/Protos/Grpc/streams.proto"
    ])
    dest "src/main/proto"
}

dependencies {
    implementation "com.google.protobuf:protobuf-java:3.12.1"

    implementation platform('io.grpc:grpc-bom:1.29.0')
    implementation "io.grpc:grpc-netty-shaded"
    implementation "io.grpc:grpc-stub"
    implementation "io.grpc:grpc-protobuf"

    implementation "javax.annotation:javax.annotation-api:1.3.2"
    implementation "javax.validation:validation-api:2.0.1.Final"

    testImplementation "junit:junit:4.13"
    testImplementation "org.slf4j:slf4j-nop:1.7.29"
    testImplementation "org.testcontainers:testcontainers:1.14.2"
    testImplementation "com.fasterxml.jackson.core:jackson-databind:2.11.0"
    testImplementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.0"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.12.1"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.29.0"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

test {
    useJUnit()

    maxHeapSize = '1G'
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/EventStore/EventStoreDB-Client-Java")
            credentials {
                username = "eventstore"
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(Test) {
    testLogging {
        // set options for log level LIFECYCLE
        events TestLogEvent.FAILED,
                TestLogEvent.PASSED,
                TestLogEvent.SKIPPED,
                TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.FULL
        showExceptions true
        showCauses true
        showStackTraces true

        // set options for log level DEBUG and INFO
        debug {
            events TestLogEvent.STARTED,
                    TestLogEvent.FAILED,
                    TestLogEvent.PASSED,
                    TestLogEvent.SKIPPED,
                    TestLogEvent.STANDARD_ERROR,
                    TestLogEvent.STANDARD_OUT
            exceptionFormat TestExceptionFormat.FULL
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}
